---
- name: Prepare runtime environment
  remote_user: ec2-user
  become: yes
  #hosts: aws_docker
  hosts: "{{ e_hosts | default('localhost') }}"

  tasks:

    - block:
    
      - name: Install Docker
        ansible.builtin.yum:
          state: installed
          name:
            - docker
          
      - name: Append docker group
        ansible.builtin.user:
          name: "{{ ansible_env.SUDO_USER }}"
          groups: docker
          append: yes
      
      - name: Start docker engine
        ansible.builtin.service:
          name: docker
          state: started
          enabled: yes      

      tags:
        - prepare_ec2
        - never

#  handlers:

#    - name: Append docker group
#      ansible.builtin.user:
#        name: "{{ ansible_user_id }}"
#        groups: docker
#        append: yes


- name: Deplpy weathercast on ec2
  remote_user: ec2-user
  become: no
  hosts: "{{ e_hosts | default('localhost') }}"

  tasks:

    - name: Include vars
      ansible.builtin.include_vars:
        dir: vars
      tags:
        - always

    - block:
        - name: Install docker-compose
          ansible.builtin.pip:
            name: docker-compose

        - name: Create directory
          ansible.builtin.file:
            path: "{{ ec2.remote_dir }}"
            state: directory

#        - name: Copy files
#          ansible.builtin.copy:
#            src: ../deploy/
#            dest: /home/ec2-user/{{ ec2.remote_dir }}/

        - name: Sync deployment files
          ansible.posix.synchronize:
            src: ../deploy/
            dest: /home/{{ ansible_user_id }}/{{ ec2.remote_dir }}/
            delete: yes
            archive: no
            recursive: yes

        - name: Create docker compose from template
          ansible.builtin.template:
            src: templates/docker-compose.j2
            dest: "{{ ec2.remote_dir }}/docker-compose.yaml"

        - name: Docker compose up
          community.docker.docker_compose:
            #project_src: "{{ ec2.remote_dir }}"
            project_src: /home/{{ ansible_user_id }}/{{ ec2.remote_dir }}
          register: reg_docker_compose_up

        - debug:
            msg: "{{ reg_docker_compose_up }}"

      tags:
        - deploy_on_ec2
        - never 

    - block:
        - name: Restart services
          community.docker.docker_compose:
            project_src: /home/{{ ansible_user_id }}/{{ ec2.remote_dir }}
            build: false
            restarted: true
          register: reg_docker_compose_restart
          
        - debug:
            msg: "{{ reg_docker_compose_restart }}"
      tags:
        - restart_on_ec2
        - never

    - block:
        - name: Rebuild services
          community.docker.docker_compose:
            project_src: /home/{{ ansible_user_id }}/{{ ec2.remote_dir }}
            build: true
          register: reg_docker_compose_rebuild
          
        - debug:
            msg: "{{ reg_docker_compose_rebuild }}"

      tags:
        - rebuild_on_ec2
        - never

    - block:
      - name: Undeploy app
        community.docker.docker_compose:
          project_src: /home/{{ ansible_user_id }}/{{ ec2.remote_dir }}
          state: absent
          remove_images: local
          remove_volumes: true
        register: reg_docker_compose_down
      - debug:
          msg: "{{ reg_docker_compose_down }}"
      tags:
        - undeploy_from_ec2
        - never
...
